#!/bin/bash

# --- Configuración ---
BASE_DIR="/home/jgc/Documentos/DAW/SEGUNDO/DWES/UNIDAD 3/3.2"
cd "$BASE_DIR"
echo "Iniciando la creación/sobrescritura del proyecto Next.js en: $BASE_DIR"

# 1. Recreación de la estructura de directorios (por seguridad)
echo "-> Creando estructura de directorios..."
mkdir -p src/app/{pagina1,pagina2,pagina3,pagina4,pagina5}
mkdir -p src/components
mkdir -p public

# 2. Relleno de archivos de Configuración (Raíz)

echo "-> Escribiendo archivos de configuración..."

# .gitignore
cat << 'EOF_GITIGNORE' > .gitignore
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
EOF_GITIGNORE

# README.md
cat << 'EOF_README_MD' > README.md
# DaisyUI

Los siguientes componentes se han obtendido de la biblioteca DaisyUI

- Drawer
- Diff
- Navbar
- Menu
- Select
- Dropdown
- Tooltip
- CountDown (añadido código JS)
- RadialProgress (añadido código JS)
- Table
- SortedTable (añadido código JS)
- Tabs



## Componentes elaborados manualmente (fuera de DaisyUI)

- AutoCarousel
- CarruselAutomático
- MyDatePicker
EOF_README_MD

# eslint.config.mjs
cat << 'EOF_ESLINT_MJS' > eslint.config.mjs
import nextCoreWebVitals from "eslint-config-next/core-web-vitals";
import { dirname } from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const eslintConfig = [...nextCoreWebVitals, {
  ignores: ["node_modules/**", ".next/**", "out/**", "build/**", "next-env.d.ts"]
}];

export default eslintConfig;
EOF_ESLINT_MJS

# jsconfig.json
cat << 'EOF_JSCONFIG_JSON' > jsconfig.json
{
  "compilerOptions": {
    "paths": {
      "@/*": ["./src/*"]
    }
  }
}
EOF_JSCONFIG_JSON

# next.config.mjs
cat << 'EOF_NEXT_CONFIG' > next.config.mjs
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;
EOF_NEXT_CONFIG

# package.json
cat << 'EOF_PACKAGE_JSON' > package.json
{
  "name": "n",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "eslint ."
  },
  "dependencies": {
    "@glidejs/glide": "^3.7.1",
    "cally": "^0.8.0",
    "next": "16.0.0",
    "react": "19.2.0",
    "react-day-picker": "^9.7.0",
    "react-dom": "19.2.0",
    "theme-change": "^2.5.0"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4",
    "daisyui": "^5.0.43",
    "eslint": "^9",
    "eslint-config-next": "16.0.0",
    "tailwindcss": "^4"
  }
}
EOF_PACKAGE_JSON

# package-lock.json (El contenido es demasiado largo para bash, solo crearemos un placeholder y confiaremos en 'npm install')
# NOTA: Para un proyecto real, necesitarías el contenido completo. Aquí, confiaremos en npm install, ya que el archivo es muy grande.
# Si quieres el contenido exacto, deberás pegarlo manualmente. Por ahora, creamos el archivo vacío para evitar errores de Next.js.
touch package-lock.json

# postcss.config.mjs
cat << 'EOF_POSTCSS_MJS' > postcss.config.mjs
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
EOF_POSTCSS_MJS

# 3. Relleno de archivos en src/app
echo "-> Escribiendo archivos en src/app..."

# src/app/globals.css
cat << 'EOF_GLOBALS_CSS' > src/app/globals.css
@import "tailwindcss";

/* @plugin "daisyui"; */

@plugin "daisyui" {
  /* themes: light --default, dark --prefersdark, cupcake, retro; */
  /* exclude: rootscrollgutter; */
  themes: all;
}

/* :root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
} */
EOF_GLOBALS_CSS

# src/app/layout.js
cat << 'EOF_LAYOUT_JS' > src/app/layout.js
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ThemeProvider from "@/components/ThemeProvider";
import Header from "@/components/Header";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Daisy UI",
  description: "Generated by create next app",
};



export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen`}
      >
        <ThemeProvider>
          <Header />
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
EOF_LAYOUT_JS

# src/app/page.js
cat << 'EOF_PAGE_JS' > src/app/page.js
import Link from "next/link";
import AutoCarousel from "@/components/AutoCarousel";
import CountDown from "@/components/CountDown";
import Table from "@/components/Table";
import SortedTable from "@/components/SortedTable";
import RadialProgress from "@/components/RadialProgress";


export default function Home() {
  return (
    <section>

      <AutoCarousel />


      <br />
      <div className="tooltip" data-tip="hello world">
        <p className="btn">Hover me</p>
      </div>

      <CountDown />
      <RadialProgress />


      {/* name of each tab group should be unique */}
      <div className="tabs tabs-box">
        <input type="radio" name="my_tabs" className="tab" aria-label="Tab 1" />
        <div className="tab-content bg-base-100 border-base-300 p-6">
          <p>Tab content 1</p>

          <details className="dropdown">
            <summary className="btn m-1">open or close</summary>
            <ul className="menu dropdown-content bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm">
              <li><a>Item 1</a></li>
              <li><a>Item 2</a></li>
            </ul>
          </details>
        </div>

        <input type="radio" name="my_tabs" className="tab" aria-label="Tab 2" />
        <div className="tab-content bg-base-100 border-base-300 p-6">
          <p>Tab content 2</p>

          <div className="dropdown">
            <div tabIndex={0} role="button" className="btn m-1">Click</div>
            <ul tabIndex={0} className="dropdown-content menu bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm">
              <li><a>Item 1</a></li>
              <li><a>Item 2</a></li>
            </ul>
          </div>
        </div>

        <input type="radio" name="my_tabs" className="tab" aria-label="Tab 3" defaultChecked />
        <div className="tab-content bg-base-100 border-base-300 p-6">
          <p>Tab content 3</p>

          <button className="btn btn-neutral">Neutral</button>
          <button className="btn btn-primary">Primary</button>
          <button className="btn btn-secondary">Secondary</button>
          <button className="btn btn-accent">Accent</button>
          <button className="btn btn-info">Info</button>
          <button className="btn btn-success">Success</button>
          <button className="btn btn-warning">Warning</button>
          <button className="btn btn-error">Error</button>
          <br />
          <button className="btn btn-soft">Default</button>
          <button className="btn btn-soft btn-primary">Primary</button>
          <button className="btn btn-soft btn-secondary">Secondary</button>
          <button className="btn btn-soft btn-accent">Accent</button>
          <button className="btn btn-soft btn-info">Info</button>
          <button className="btn btn-soft btn-success">Success</button>
          <button className="btn btn-soft btn-warning">Warning</button>
          <button className="btn btn-soft btn-error">Error</button>
          <br />
          <button className="btn btn-outline">Default</button>
          <button className="btn btn-outline btn-primary">Primary</button>
          <button className="btn btn-outline btn-secondary">Secondary</button>
          <button className="btn btn-outline btn-accent">Accent</button>
          <button className="btn btn-outline btn-info">Info</button>
          <button className="btn btn-outline btn-success">Success</button>
          <button className="btn btn-outline btn-warning">Warning</button>
          <button className="btn btn-outline btn-error">Error</button>

        </div>
      </div>

      <div className="p-10 bg-white"></div>

      <SortedTable />
      {/* <Table /> */}

    </section>
  );
}
EOF_PAGE_JS

# src/app/pagina1/page.js
cat << 'EOF_PAGINA1_PAGE_JS' > src/app/pagina1/page.js
import MyDatePicker from "@/components/MyDatePicker";


function Page1() {
    const fecha = new Date()
    console.log(fecha.toISOString());

    return (
        <>
            <p>{fecha.toISOString()}</p>
            <MyDatePicker />
            <input type="date"
                defaultValue="2024-07-22"
                min="2025-01-01"
                max="2025-12-31" />
            <input type="datetime-local" />
        </>
    );
}

export default Page1;
EOF_PAGINA1_PAGE_JS

# src/app/pagina2/page.js
cat << 'EOF_PAGINA2_PAGE_JS' > src/app/pagina2/page.js
'use client'
import { useEffect, useState } from "react";
import Reloj from "./reloj";



function Page2() {
    const [hora, setHora] = useState(new Date());

    useEffect(() => {
        const i1 = setInterval(() => {
            setHora(new Date());
            document.title = new Date().toLocaleTimeString();
        }, 1000);


        return () => clearInterval(i1);
    }, []);

    return (
        <div>
            <h2>Hora actual:</h2>
            <p className="text-center text-9xl font-mono">{hora.toLocaleTimeString()}</p>
        </div>
    );


    // return (
    //     <Reloj />
    // );

}

export default Page2;
EOF_PAGINA2_PAGE_JS

# src/app/pagina2/reloj.js
cat << 'EOF_PAGINA2_RELOJ_JS' > src/app/pagina2/reloj.js
'use client'; // Asegura que solo se ejecute en el cliente (Next.js 13+ con app directory)

import React, { useState, useEffect } from 'react';

function Reloj() {
    const [hora, setHora] = useState(new Date());

    useEffect(() => {
        const i1 = setInterval(() => {
            setHora(new Date());
        }, 1000);

        return () => clearInterval(i1);
    }, []);

    return (
        <div>
            <h2>Hora actual:</h2>
            <p>{hora.toLocaleTimeString()}</p>
        </div>
    );
}

export default Reloj;
EOF_PAGINA2_RELOJ_JS

# src/app/pagina3/page.js
cat << 'EOF_PAGINA3_PAGE_JS' > src/app/pagina3/page.js
import MyDatePicker from "@/components/MyDatePicker";

function Page3() {

    return (
        <MyDatePicker />
    );
}

export default Page3;
EOF_PAGINA3_PAGE_JS

# src/app/pagina4/page.js
cat << 'EOF_PAGINA4_PAGE_JS' > src/app/pagina4/page.js
import Diff from "@/components/Diff";

function Page4() {

    return (
        <Diff />
    );
}

export default Page4;
EOF_PAGINA4_PAGE_JS

# src/app/pagina5/page.js
cat << 'EOF_PAGINA5_PAGE_JS' > src/app/pagina5/page.js
'use client'


import React, { useEffect } from "react"
import Glide from "@glidejs/glide"

export default function CarouselCard() {
    useEffect(() => {
        const slider = new Glide(".glide-06", {
            type: "carousel",
            focusAt: "center",
            perView: 3,
            autoplay: 2000,
            animationDuration: 200,
            gap: 24,
            classNames: {
                nav: {
                    active: "[&>*]:bg-slate-700",
                },
            },
            breakpoints: {
                1024: {
                    perView: 2,
                },
                640: {
                    perView: 1,
                },
            },
        }).mount()

        return () => {
            slider.destroy()
        }
    }, [])

    return (
        <>
            {/**/}
            <div className="glide-06 relative w-full overflow-hidden rounded bg-white shadow-xl shadow-slate-200">
                {/* */}
                <div className="overflow-hidden" data-glide-el="track">
                    <ul className="whitespace-no-wrap flex-no-wrap [backface-visibility: hidden] [transform-style: preserve-3d] [touch-action: pan-Y] [will-change: transform] relative flex w-full overflow-hidden p-0">
                        <li>
                            <img
                                src="https://Tailwindmix.b-cdn.net/carousel/carousel-image-05.jpg"
                                className="m-auto max-h-full w-full max-w-full"
                            />
                        </li>
                        <li>
                            <img
                                src="https://Tailwindmix.b-cdn.net/carousel/carousel-image-01.jpg"
                                className="m-auto max-h-full w-full max-w-full"
                            />
                        </li>
                        <li>
                            <img
                                src="https://Tailwindmix.b-cdn.net/carousel/carousel-image-02.jpg"
                                className="m-auto max-h-full w-full max-w-full"
                            />
                        </li>
                        <li>
                            <img
                                src="https://Tailwindmix.b-cdn.net/carousel/carousel-image-03.jpg"
                                className="m-auto max-h-full w-full max-w-full"
                            />
                        </li>
                        <li>
                            <img
                                src="https://Tailwindmix.b-cdn.net/carousel/carousel-image-04.jpg"
                                className="m-auto max-h-full w-full max-w-full"
                            />
                        </li>
                    </ul>
                </div>
                {/* */}
                <div
                    className="absolute left-0 top-1/2 flex h-0 w-full items-center justify-between px-4 "
                    data-glide-el="controls"
                >
                    <button
                        className="inline-flex h-8 w-8 items-center justify-center rounded-full border border-slate-700 bg-white/20 text-slate-700 transition duration-300 hover:border-slate-900 hover:text-slate-900 focus-visible:outline-none lg:h-12 lg:w-12"
                        data-glide-dir="<"
                        aria-label="prev slide"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            strokeWidth="1.5"
                            stroke="currentColor"
                            className="h-5 w-5"
                        >
                            <title>prev slide</title>
                            <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                d="M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18"
                            />
                        </svg>
                    </button>
                    <button
                        className="inline-flex h-8 w-8 items-center justify-center rounded-full border border-slate-700 bg-white/20 text-slate-700 transition duration-300 hover:border-slate-900 hover:text-slate-900 focus-visible:outline-none lg:h-12 lg:w-12"
                        data-glide-dir=">"
                        aria-label="next slide"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            strokeWidth="1.5"
                            stroke="currentColor"
                            className="h-5 w-5"
                        >
                            <title>next slide</title>
                            <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                d="M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3"
                            />
                        </svg>
                    </button>
                </div>
                {/* */}
                <div
                    className="absolute bottom-0 flex w-full items-center justify-center gap-2"
                    data-glide-el="controls[nav]"
                >
                    <button
                        className="group p-4"
                        data-glide-dir="=0"
                        aria-label="goto slide 1"
                    >
                        <span className="block h-2 w-2 rounded-full bg-white/20 ring-1 ring-slate-700 transition-colors duration-300 focus:outline-none"></span>
                    </button>
                    <button
                        className="group p-4"
                        data-glide-dir="=1"
                        aria-label="goto slide 2"
                    >
                        <span className="block h-2 w-2 rounded-full bg-white/20 ring-1 ring-slate-700 transition-colors duration-300 focus:outline-none"></span>
                    </button>
                    <button
                        className="group p-4"
                        data-glide-dir="=2"
                        aria-label="goto slide 3"
                    >
                        <span className="block h-2 w-2 rounded-full bg-white/20 ring-1 ring-slate-700 transition-colors duration-300 focus:outline-none"></span>
                    </button>
                    <button
                        className="group p-4"
                        data-glide-dir="=3"
                        aria-label="goto slide 4"
                    >
                        <span className="block h-2 w-2 rounded-full bg-white/20 ring-1 ring-slate-700 transition-colors duration-300 focus:outline-none"></span>
                    </button>
                </div>
            </div>
            {/**/}
        </>
    )
}
EOF_PAGINA5_PAGE_JS

# 4. Relleno de archivos en src/components
echo "-> Escribiendo archivos en src/components..."

# src/components/AutoCarousel.js
cat << 'EOF_AUTOCAROUSEL_JS' > src/components/AutoCarousel.js
// components/AutoCarousel.js
'use client'

import Image from "next/image";
import { useEffect, useState } from "react";

const images = ["/img1.jpg", "/img2.jpg", "/img3.jpg", "/img4.jpg"];

export default function AutoCarousel() {
    const [index, setIndex] = useState(0);

    const nextSlide = () => setIndex((prev) => (prev + 1) % images.length);
    const prevSlide = () => setIndex((prev) => (prev - 1 + images.length) % images.length);

    useEffect(() => {
        const timer = setInterval(() => nextSlide(), 4000); // Cambia cada 4 segundos
        return () => clearInterval(timer);
    }, []);

    return (
        <div className="relative w-full h-64 overflow-hidden rounded-xl">
            {images.map((src, i) => (
                <img
                    key={i}
                    src={src}
                    alt={`Slide ${i + 1}`}
                    className={`absolute top-0 left-0 w-full h-full object-cover object-bottom transition-opacity duration-700 ease-in-out ${i === index ? "opacity-100" : "opacity-0"
                        }`}
                />
            ))}

            {/* Botones de navegación */}
            <button
                type="button"
                onClick={prevSlide}
                className="absolute left-2 top-1/2 transform -translate-y-1/4 btn btn-circle bg-black bg-opacity-30 text-white border-none hover:bg-opacity-50"
            >
                ❮
            </button>
            <button
                type="button"
                onClick={nextSlide}
                className="absolute right-2 top-1/2 transform -translate-y-1/4 btn btn-circle bg-black bg-opacity-30 text-white border-none hover:bg-opacity-50"
            >
                ❯
            </button>
        </div>
    );
}
EOF_AUTOCAROUSEL_JS

# src/components/CarruselAutomatico.js
cat << 'EOF_CARRUSEL_AUTOMATICO_JS' > src/components/CarruselAutomatico.js
'use client'

import Image from "next/image";
import React, { useEffect, useState } from "react";

const images = [
    "https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp",
    "https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp",
    "https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp",
    "https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp",
    "https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp",
    "https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp",
    "https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp"
];

const CarruselAutomatico = () => {
    const [currentIndex, setCurrentIndex] = useState(0);

    useEffect(() => {
        const interval = setInterval(() => {
            setCurrentIndex(prev => (prev + 1) % images.length);
        }, 3000);
        return () => clearInterval(interval);
    }, []);

    return (
        <div className="overflow-hidden w-full h-96 border border-black rounded-box relative">
            <div
                className="flex transition-transform duration-700 ease-in-out h-full"
                style={{
                    transform: `translateX(-${currentIndex * 100}%)`,
                    width: `${images.length * 100}%`
                }}
            >
                {images.map((img, index) => (
                    <div
                        key={index}
                        className="w-full flex-shrink-0 h-full"
                    >
                        <Image
                            src={img}
                            alt={`Imagen ${index + 1}`}
                            className="h-full object-cover"
                        />
                    </div>
                ))}
            </div>
        </div>
    );
};

export default CarruselAutomatico;
EOF_CARRUSEL_AUTOMATICO_JS

# src/components/CountDown.js
cat << 'EOF_COUNTDOWN_JS' > src/components/CountDown.js
// components/CountDown.js
"use client";

import { useEffect, useState } from "react";

export default function CountDown({ from = 59 }) {
    const [counter, setCounter] = useState(from);

    useEffect(() => {
        if (counter <= 0) return;

        const timer = setInterval(() => {
            setCounter((prev) => prev - 1);
        }, 1000);

        return () => clearInterval(timer);
    }, [counter]);

    return (
        <span className="countdown text-4xl">
            <span
                style={{ "--value": counter }}
                aria-live="polite"
                aria-label={`Contador: ${counter}`}
            >
                {counter}
            </span>
        </span>
    );
}
EOF_COUNTDOWN_JS

# src/components/Diff.js
cat << 'EOF_DIFF_JS' > src/components/Diff.js
import Image from "next/image";

function Diff() {
    return (
        <figure className="diff aspect-16/9 w-1/2" tabIndex={0}>
            <div className="diff-item-1" role="img" tabIndex={0}>
                <img alt="daisy" src="https://img.daisyui.com/images/stock/photo-1560717789-0ac7c58ac90a.webp" />
            </div>
            <div className="diff-item-2" role="img">
                <img
                    alt="daisy"
                    src="https://img.daisyui.com/images/stock/photo-1560717789-0ac7c58ac90a-blur.webp" />
            </div>
            <div className="diff-resizer"></div>
        </figure>
    );
}

export default Diff;
EOF_DIFF_JS

# src/components/Header.js
cat << 'EOF_HEADER_JS' > src/components/Header.js
import Link from "next/link";
import ThemeSelect from "./ThemeSelect";

function Header() {
    return (

        <div className="navbar bg-base-500 shadow-sm">

            <div className="flex-1">
                <Link href="/" className="btn btn-ghost text-xl">Inicio</Link>
                <ThemeSelect />
            </div>
            <div className="flex-none pr-20">
                <ul className="menu menu-horizontal px-1">
                    <li>
                        <Link href="/pagina1">Página 1</Link>
                    </li>
                    <li>
                        <Link href="/pagina2">Página 2</Link>
                    </li>


                    <li>
                        <div className="dropdown dropdown-end">
                            <div tabIndex={0} role="button">Otras páginas</div>
                            <ul
                                tabIndex={0}
                                className="menu dropdown-content bg-base-200 rounded-box z-1 mt-4 w-52 p-2 shadow-sm">
                                <li>
                                    <Link href="/pagina3">Página 3</Link>
                                </li>
                                <li>
                                    <Link href="/pagina4">Página 4</Link>
                                </li>
                                <li>
                                    <Link href="/pagina5">Página 5</Link>
                                </li>
                            </ul>
                        </div>
                    </li>



                    <div className="drawer">
                        <input id="my-drawer" type="checkbox" className="drawer-toggle" />
                        <div className="drawer-content fixed top-0 right-0 z-10">
                            {/* Page content here */}
                            <label htmlFor="my-drawer" className=" btn btn-primary drawer-button size-15 rounded-full">Drawer</label>
                        </div>
                        <div className="drawer-side z-10">
                            <label htmlFor="my-drawer" aria-label="close sidebar" className="drawer-overlay"></label>
                            <ul className="menu bg-base-200 text-base-content min-h-full w-80 p-4">
                                {/* Sidebar content here */}
                                <li><Link href="/pagina1">Pagina 1</Link></li>
                                <li><Link href="/pagina2">Pagina 2</Link></li>
                            </ul>
                        </div>
                    </div>


                </ul>
            </div>
        </div>


    );
}

export default Header;
EOF_HEADER_JS

# src/components/MyDatePicker.js
cat << 'EOF_MYDATEPICKER_JS' > src/components/MyDatePicker.js
'use client'
import { useState } from "react";
import { DayPicker } from "react-day-picker";
import "react-day-picker/style.css";
import { es } from "react-day-picker/locale";

export default function MyDatePicker() {
    const [selected, setSelected] = useState();

    return (
        <DayPicker
            locale={es}
            mode="single"   // multiple, range
            selected={selected}
            onSelect={setSelected}
        // footer={
        //     selected ? `Seleccionado: ${selected.toLocaleDateString()}` : "Escoge un día."
        // }
        />
    );
}
EOF_MYDATEPICKER_JS

# src/components/RadialProgress.js
cat << 'EOF_RADIAL_PROGRESS_JS' > src/components/RadialProgress.js
'use client'

import { useEffect, useState } from "react";

function RadialProgress() {

    const [progreso, setProgreso] = useState(0)


    useEffect(() => {
        if (progreso >= 100) return;

        const timer = setInterval(() => {
            setProgreso((prev) => prev + 1);
        }, 20);


        return () => clearInterval(timer);
    }, [progreso]);

    return (
        <div className="radial-progress text-blue-500" style={{ "--value": progreso }}
            aria-valuenow={progreso} role="progressbar">{progreso}%</div>

    );
}

export default RadialProgress;
EOF_RADIAL_PROGRESS_JS

# src/components/SortedTable.js
cat << 'EOF_SORTED_TABLE_JS' > src/components/SortedTable.js
'use client'
import { useState } from 'react';

function SortedTable() {
    const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });

    const data = [
        {
            id: 1,
            name: "Cy Ganderton",
            job: "Quality Control Specialist",
            company: "Littel, Schaden and Vandervort",
            location: "Canada",
            lastLogin: "12/16/2020",
            color: "Blue"
        },
        {
            id: 2,
            name: "Hart Hagerty",
            job: "Desktop Support Technician",
            company: "Zemlak, Daniel and Leannon",
            location: "United States",
            lastLogin: "12/5/2020",
            color: "Purple"
        },
        {
            id: 3,
            name: "Brice Swyre",
            job: "Tax Accountant",
            company: "Carroll Group",
            location: "China",
            lastLogin: "8/15/2020",
            color: "Red"
        },
        {
            id: 4,
            name: "Marjy Ferencz",
            job: "Office Assistant I",
            company: "Rowe-Schoen",
            location: "Russia",
            lastLogin: "3/25/2021",
            color: "Crimson"
        },
        {
            id: 5,
            name: "Yancy Tear",
            job: "Community Outreach Specialist",
            company: "Wyman-Ledner",
            location: "Brazil",
            lastLogin: "5/22/2020",
            color: "Indigo"
        },
        {
            id: 6,
            name: "Irma Vasilik",
            job: "Editor",
            company: "Wiza, Bins and Emard",
            location: "Venezuela",
            lastLogin: "12/8/2020",
            color: "Purple"
        },
        {
            id: 7,
            name: "Meghann Durtnal",
            job: "Staff Accountant IV",
            company: "Schuster-Schimmel",
            location: "Philippines",
            lastLogin: "2/17/2021",
            color: "Yellow"
        },
        {
            id: 8,
            name: "Sammy Seston",
            job: "Accountant I",
            company: "O'Hara, Welch and Keebler",
            location: "Indonesia",
            lastLogin: "5/23/2020",
            color: "Crimson"
        },
        {
            id: 9,
            name: "Lesya Tinham",
            job: "Safety Technician IV",
            company: "Turner-Kuhlman",
            location: "Philippines",
            lastLogin: "2/21/2021",
            color: "Maroon"
        },
        {
            id: 10,
            name: "Zaneta Tewkesbury",
            job: "VP Marketing",
            company: "Sauer LLC",
            location: "Chad",
            lastLogin: "6/23/2020",
            color: "Green"
        },
        {
            id: 11,
            name: "Andy Tipple",
            job: "Librarian",
            company: "Hilpert Group",
            location: "Poland",
            lastLogin: "7/9/2020",
            color: "Indigo"
        },
        {
            id: 12,
            name: "Sophi Biles",
            job: "Recruiting Manager",
            company: "Gutmann Inc",
            location: "Indonesia",
            lastLogin: "2/12/2021",
            color: "Maroon"
        },
        {
            id: 13,
            name: "Florida Garces",
            job: "Web Developer IV",
            company: "Gaylord, Pacocha and Baumbach",
            location: "Poland",
            lastLogin: "5/31/2020",
            color: "Purple"
        },
        {
            id: 14,
            name: "Maribeth Popping",
            job: "Analyst Programmer",
            company: "Deckow-Pouros",
            location: "Portugal",
            lastLogin: "4/27/2021",
            color: "Aquamarine"
        },
        {
            id: 15,
            name: "Moritz Dryburgh",
            job: "Dental Hygienist",
            company: "Schiller, Cole and Hackett",
            location: "Sri Lanka",
            lastLogin: "8/8/2020",
            color: "Crimson"
        },
        {
            id: 16,
            name: "Reid Semiras",
            job: "Teacher",
            company: "Sporer, Sipes and Rogahn",
            location: "Poland",
            lastLogin: "7/30/2020",
            color: "Green"
        },
        {
            id: 17,
            name: "Alec Lethby",
            job: "Teacher",
            company: "Reichel, Glover and Hamill",
            location: "China",
            lastLogin: "2/28/2021",
            color: "Khaki"
        },
        {
            id: 18,
            name: "Aland Wilber",
            job: "Quality Control Specialist",
            company: "Kshlerin, Rogahn and Swaniawski",
            location: "Czech Republic",
            lastLogin: "9/29/2020",
            color: "Purple"
        },
        {
            id: 19,
            name: "Teddie Duerden",
            job: "Staff Accountant III",
            company: "Pouros, Ullrich and Windler",
            location: "France",
            lastLogin: "10/27/2020",
            color: "Aquamarine"
        },
        {
            id: 20,
            name: "Lorelei Blackstone",
            job: "Data Coordiator",
            company: "Witting, Kutch and Greenfelder",
            location: "Kazakhstan",
            lastLogin: "6/3/2020",
            color: "Red"
        }

    ];

    const sortedData = data.toSorted((a, b) => {
        if (!sortConfig.key) return 0;
        const aValue = a[sortConfig.key];
        const bValue = b[sortConfig.key];

        // Si es una fecha
        if (sortConfig.key === 'lastLogin') {
            return (new Date(aValue) - new Date(bValue)) * (sortConfig.direction === 'asc' ? 1 : -1);
        }

        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;
        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;
        return 0;
    });

    const requestSort = (key) => {
        let direction = 'asc';
        if (sortConfig.key === key && sortConfig.direction === 'asc') {
            direction = 'desc';
        }
        setSortConfig({ key, direction });
    };

    const headers = [
        { key: 'name', label: 'Name' },
        { key: 'job', label: 'Job' },
        { key: 'company', label: 'Company' },
        { key: 'location', label: 'Location' },
        { key: 'lastLogin', label: 'Last Login' },
        { key: 'color', label: 'Favorite Color' }
    ];

    return (
        <div className="overflow-x-auto">
            <table className="table table-xs">
                <thead>
                    <tr>
                        <th>#</th>
                        {headers.map(h => (
                            <th key={h.key} onClick={() => requestSort(h.key)} className="cursor-pointer">
                                {h.label}
                                {sortConfig.key === h.key ? (sortConfig.direction === 'asc' ? ' 🔼' : ' 🔽') : ''}
                            </th>
                        ))}
                    </tr>
                </thead>
                <tbody>
                    {sortedData.map((item, index) => (
                        <tr key={item.id}>
                            <th>{index + 1}</th>
                            <td>{item.name}</td>
                            <td>{item.job}</td>
                            <td>{item.company}</td>
                            <td>{item.location}</td>
                            <td>{item.lastLogin}</td>
                            <td>{item.color}</td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
}

export default SortedTable;
EOF_SORTED_TABLE_JS

# src/components/Table.js
cat << 'EOF_TABLE_JS' > src/components/Table.js
function Table() {
    return (
        <div className="overflow-x-auto">
            <table className="table table-xs">
                <thead>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Job</th>
                        <th>company</th>
                        <th>location</th>
                        <th>Last Login</th>
                        <th>Favorite Color</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th>1</th>
                        <td>Cy Ganderton</td>
                        <td>Quality Control Specialist</td>
                        <td>Littel, Schaden and Vandervort</td>
                        <td>Canada</td>
                        <td>12/16/2020</td>
                        <td>Blue</td>
                    </tr>
                    <tr>
                        <th>2</th>
                        <td>Hart Hagerty</td>
                        <td>Desktop Support Technician</td>
                        <td>Zemlak, Daniel and Leannon</td>
                        <td>United States</td>
                        <td>12/5/2020</td>
                        <td>Purple</td>
                    </tr>
                    <tr>
                        <th>3</th>
                        <td>Brice Swyre</td>
                        <td>Tax Accountant</td>
                        <td>Carroll Group</td>
                        <td>China</td>
                        <td>8/15/2020</td>
                        <td>Red</td>
                    </tr>
                    <tr>
                        <th>4</th>
                        <td>Marjy Ferencz</td>
                        <td>Office Assistant I</td>
                        <td>Rowe-Schoen</td>
                        <td>Russia</td>
                        <td>3/25/2021</td>
                        <td>Crimson</td>
                    </tr>
                    <tr>
                        <th>5</th>
                        <td>Yancy Tear</td>
                        <td>Community Outreach Specialist</td>
                        <td>Wyman-Ledner</td>
                        <td>Brazil</td>
                        <td>5/22/2020</td>
                        <td>Indigo</td>
                    </tr>
                    <tr>
                        <th>6</th>
                        <td>Irma Vasilik</td>
                        <td>Editor</td>
                        <td>Wiza, Bins and Emard</td>
                        <td>Venezuela</td>
                        <td>12/8/2020</td>
                        <td>Purple</td>
                    </tr>
                    <tr>
                        <th>7</th>
                        <td>Meghann Durtnal</td>
                        <td>Staff Accountant IV</td>
                        <td>Schuster-Schimmel</td>
                        <td>Philippines</td>
                        <td>2/17/2021</td>
                        <td>Yellow</td>
                    </tr>
                    <tr>
                        <th>8</th>
                        <td>Sammy Seston</td>
                        <td>Accountant I</td>
                        <td>O&apos;Hara, Welch and Keebler</td>
                        <td>Indonesia</td>
                        <td>5/23/2020</td>
                        <td>Crimson</td>
                    </tr>
                    <tr>
                        <th>9</th>
                        <td>Lesya Tinham</td>
                        <td>Safety Technician IV</td>
                        <td>Turner-Kuhlman</td>
                        <td>Philippines</td>
                        <td>2/21/2021</td>
                        <td>Maroon</td>
                    </tr>
                    <tr>
                        <th>10</th>
                        <td>Zaneta Tewkesbury</td>
                        <td>VP Marketing</td>
                        <td>Sauer LLC</td>
                        <td>Chad</td>
                        <td>6/23/2020</td>
                        <td>Green</td>
                    </tr>
                    <tr>
                        <th>11</th>
                        <td>Andy Tipple</td>
                        <td>Librarian</td>
                        <td>Hilpert Group</td>
                        <td>Poland</td>
                        <td>7/9/2020</td>
                        <td>Indigo</td>
                    </tr>
                    <tr>
                        <th>12</th>
                        <td>Sophi Biles</td>
                        <td>Recruiting Manager</td>
                        <td>Gutmann Inc</td>
                        <td>Indonesia</td>
                        <td>2/12/2021</td>
                        <td>Maroon</td>
                    </tr>
                    <tr>
                        <th>13</th>
                        <td>Florida Garces</td>
                        <td>Web Developer IV</td>
                        <td>Gaylord, Pacocha and Baumbach</td>
                        <td>Poland</td>
                        <td>5/31/2020</td>
                        <td>Purple</td>
                    </tr>
                    <tr>
                        <th>14</th>
                        <td>Maribeth Popping</td>
                        <td>Analyst Programmer</td>
                        <td>Deckow-Pouros</td>
                        <td>Portugal</td>
                        <td>4/27/2021</td>
                        <td>Aquamarine</td>
                    </tr>
                    <tr>
                        <th>15</th>
                        <td>Moritz Dryburgh</td>
                        <td>Dental Hygienist</td>
                        <td>Schiller, Cole and Hackett</td>
                        <td>Sri Lanka</td>
                        <td>8/8/2020</td>
                        <td>Crimson</td>
                    </tr>
                    <tr>
                        <th>16</th>
                        <td>Reid Semiras</td>
                        <td>Teacher</td>
                        <td>Sporer, Sipes and Rogahn</td>
                        <td>Poland</td>
                        <td>7/30/2020</td>
                        <td>Green</td>
                    </tr>
                    <tr>
                        <th>17</th>
                        <td>Alec Lethby</td>
                        <td>Teacher</td>
                        <td>Reichel, Glover and Hamill</td>
                        <td>China</td>
                        <td>2/28/2021</td>
                        <td>Khaki</td>
                    </tr>
                    <tr>
                        <th>18</th>
                        <td>Aland Wilber</td>
                        <td>Quality Control Specialist</td>
                        <td>Kshlerin, Rogahn and Swaniawski</td>
                        <td>Czech Republic</td>
                        <td>9/29/2020</td>
                        <td>Purple</td>
                    </tr>
                    <tr>
                        <th>19</th>
                        <td>Teddie Duerden</td>
                        <td>Staff Accountant III</td>
                        <td>Pouros, Ullrich and Windler</td>
                        <td>France</td>
                        <td>10/27/2020</td>
                        <td>Aquamarine</td>
                    </tr>
                    <tr>
                        <th>20</th>
                        <td>Lorelei Blackstone</td>
                        <td>Data Coordiator</td>
                        <td>Witting, Kutch and Greenfelder</td>
                        <td>Kazakhstan</td>
                        <td>6/3/2020</td>
                        <td>Red</td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Job</th>
                        <th>company</th>
                        <th>location</th>
                        <th>Last Login</th>
                        <th>Favorite Color</th>
                    </tr>
                </tfoot>
            </table>
        </div>
    );
}

export default Table;
EOF_TABLE_JS

# src/components/ThemeProvider.js
cat << 'EOF_THEME_PROVIDER_JS' > src/components/ThemeProvider.js
// components/ThemeProvider.js
"use client";

import { useEffect, useState } from "react";
import { themeChange } from "theme-change";

const DEFAULT_THEME = "light";

export default function ThemeProvider({ children }) {
    const [theme, setTheme] = useState("");

    useEffect(() => {
        themeChange(false); // 👆 false parameter is required for react project

        // Si hay un tema guardado en localStorage, úsalo
        const saved = localStorage.getItem("theme");

        if (saved) {
            applyTheme(saved);
        } else {
            // Detectar tema del sistema
            const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
            const systemTheme = prefersDark ? "dark" : DEFAULT_THEME;
            applyTheme(systemTheme);
        }

        // Escuchar cambios entre pestañas
        const handleStorage = (e) => {
            if (e.key === "theme" && e.newValue) {
                applyTheme(e.newValue);
            }
        };
        window.addEventListener("storage", handleStorage);

        return () => window.removeEventListener("storage", handleStorage);
    }, []);

    const applyTheme = (theme) => {
        setTheme(theme);
        document.documentElement.setAttribute("data-theme", theme);
        localStorage.setItem("theme", theme);
    };

    return <>{children}</>;
}
EOF_THEME_PROVIDER_JS

# src/components/ThemeSelect.js
cat << 'EOF_THEME_SELECT_JS' > src/components/ThemeSelect.js
// components/ThemeSelect.js
"use client";

export default function ThemeSelect() {
    return (
        <select className="select select-bordered" data-choose-theme>
            <option value="light">Claro</option>
            <option value="dark">Oscuro</option>
            <option value="cupcake">Cupcake</option>
            <option value="bumblebee">Bumblebee</option>
            <option value="winter">Winter</option>
            <option value="autumn">Autumn</option>
            <option value="retro">Retro</option>
            <option value="lemonade">Lemonade</option>
            <option value="dim">Dim</option>
            <option value="coffee">Coffee</option>
        </select>
    );
}
EOF_THEME_SELECT_JS

# 5. Placeholder para archivos binarios
echo "-> Creando placeholders para archivos binarios (imágenes/favicon)..."
touch public/img1.jpg public/img2.jpg public/img3.jpg public/img4.jpg
touch src/app/favicon.ico

echo "✅ Script finalizado. El código ha sido escrito en todos los archivos."
echo ""
echo "--- PASOS FINALES ---"
echo "1. MANEJO DE ARCHIVOS BINARIOS: Debes **copiar manualmente** las imágenes originales (img1.jpg a img4.jpg) y el favicon.ico a las carpetas 'public' y 'src/app' respectivamente, ya que un script de texto no puede recrear archivos binarios con el contenido correcto."
echo ""
echo "2. INSTALACIÓN DE DEPENDENCIAS: Ejecuta el siguiente comando para instalar todo:"
echo "npm install"
echo ""
echo "3. INICIALIZAR GIT (para cumplir con la rúbrica):"
echo "git init"
echo "git add ."
echo "git commit -m \"feat: Estructura inicial del proyecto Next.js con DaisyUI y componentes\""
echo ""
echo "4. INICIAR PROYECTO:"
echo "npm run dev"
